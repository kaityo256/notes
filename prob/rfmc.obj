%TGIF 4.1.43
state(0,37,100.000,0,0,0,8,1,9,1,1,0,1,0,0,1,0,'Helvetica',0,103680,0,0,0,10,0,0,1,1,0,16,0,0,1,1,1,1,1056,1497,1,0,2880,0).
%
% @(#)$Header$
% %W%
%
unit("1 pixel/pixel").
color_info(14,65535,0,[
	"magenta", 65535, 0, 65535, 65535, 0, 65535, 1,
	"red", 65535, 0, 0, 65535, 0, 0, 1,
	"green", 0, 65535, 0, 0, 65535, 0, 1,
	"blue", 0, 0, 65535, 0, 0, 65535, 1,
	"yellow", 65535, 65535, 0, 65535, 65535, 0, 1,
	"pink", 65535, 49931, 50971, 65535, 49344, 52171, 1,
	"cyan", 0, 65535, 65535, 0, 65535, 65535, 1,
	"CadetBlue", 22885, 40569, 40569, 24415, 40606, 41120, 1,
	"white", 65535, 65535, 65535, 65535, 65535, 65535, 1,
	"black", 0, 0, 0, 0, 0, 0, 1,
	"DarkSlateGray", 10402, 19764, 18724, 12079, 20303, 20303, 1,
	"#0000ff", 0, 0, 65535, 0, 0, 65280, 1,
	"#ff00ff", 65535, 0, 65535, 65280, 0, 65280, 1,
	"#ff0000", 65535, 0, 0, 65280, 0, 0, 1
]).
script_frac("0.6").
fg_bg_colors('black','white').
dont_reencode("FFDingbests:ZapfDingbats").
page(1,"",1,'').
poly('black','',2,[
	128,128,480,128],1,1,1,0,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	128,120,128,136],0,1,1,6,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	192,120,192,136],0,1,1,8,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	256,120,256,136],0,1,1,9,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	320,120,320,136],0,1,1,10,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	384,120,384,136],0,1,1,11,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	448,120,448,136],0,1,1,12,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	160,120,160,136],0,1,1,13,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	224,120,224,136],0,1,1,14,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	288,120,288,136],0,1,1,15,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	352,120,352,136],0,1,1,16,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	416,120,416,136],0,1,1,17,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	128,192,480,192],1,1,1,19,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	128,184,128,200],0,1,1,21,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	224,184,224,200],0,1,1,23,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	416,184,416,200],0,1,1,25,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	224,80,224,112],1,1,1,26,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
text('black',192,54,1,0,1,65,22,28,18,4,0,0,0,0,2,65,22,0,0,"",0,0,0,0,72,'',[
minilines(65,22,0,0,0,0,0,[
mini_line(65,18,4,0,0,0,[
str_block(0,65,18,4,0,-2,0,0,0,[
str_seg('black','Helvetica',0,103680,65,18,4,0,-2,0,0,0,0,0,
	"Accept!")])
])
])]).
text('black',384,54,1,0,1,65,22,35,18,4,0,0,0,0,2,65,22,0,0,"",0,0,0,0,72,'',[
minilines(65,22,0,0,0,0,0,[
mini_line(65,18,4,0,0,0,[
str_block(0,65,18,4,0,-2,0,0,0,[
str_seg('black','Helvetica',0,103680,65,18,4,0,-2,0,0,0,0,0,
	"Accept!")])
])
])]).
poly('black','',2,[
	416,80,416,112],1,1,1,37,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
icon([
polygon('#0000ff','',5,[
	496,124,500,124,500,120,496,120,496,124],0,1,0,0,1122,0,0,0,0,0,'1',0,
    "00",[
]),
xbm('black','',496,120,503,133,0,1161,0,7,13,0,0,1,302000,684000,309000,697000,0,0,1,0,0,0,0,
    "Sat Jul 23 00:53:34 2005","/tmp/TgifOopGZc.eps",187,[
    "%!PS-Adobe-2.0 EPSF-1.2",
    "",
    "save countdictstack mark newpath /showpage {} def /setpagedevice {pop} def",
    "%!PS (but not EPSF; comments have been disabled)",
    "%DVIPSWebPage: (www.radicaleye.com)",
    "%DVIPSCommandLine: dvips -N -n 1 -o /tmp/TgifOopGZc.ps /tmp/TgifOopGZc",
    "%DVIPSParameters: dpi=600, compressed",
    "%DVIPSSource:  TeX output 2005.07.23:0053",
    "%!",
    "/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S",
    "N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72",
    "mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0",
    "0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{",
    "landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize",
    "mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[",
    "matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round",
    "exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{",
    "statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]",
    "N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin",
    "/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array",
    "/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2",
    "array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N",
    "df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A",
    "definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get",
    "}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}",
    "B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr",
    "1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3",
    "1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx",
    "0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx",
    "sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{",
    "rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp",
    "gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B",
    "/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{",
    "/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{",
    "A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy",
    "get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}",
    "ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp",
    "fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17",
    "{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add",
    "chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{",
    "1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}",
    "forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn",
    "/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put",
    "}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{",
    "bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A",
    "mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{",
    "SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{",
    "userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X",
    "1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4",
    "index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N",
    "/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3",
    "def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90",
    "rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0",
    "N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop",
    "false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A",
    "length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}",
    "forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{",
    "BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat",
    "{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch",
    "round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0",
    "rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B",
    "/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}",
    "B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p",
    "-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{",
    "0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end",
    "% Thomas Esser, Dec 2002. public domain",
    "%",
    "% Encoding for:",
    "%     cmmi10 cmmi12 cmmi5 cmmi6 cmmi7 cmmi8 cmmi9 cmmib10",
    "%",
    "/TeXaae443f0Encoding [",
    "/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega",
    "/alpha /beta /gamma /delta /epsilon1 /zeta /eta /theta /iota /kappa",
    "/lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon /phi /chi /psi",
    "/omega /epsilon /theta1 /pi1 /rho1 /sigma1 /phi1 /arrowlefttophalf",
    "/arrowleftbothalf /arrowrighttophalf /arrowrightbothalf /arrowhookleft",
    "/arrowhookright /triangleright /triangleleft /zerooldstyle /oneoldstyle",
    "/twooldstyle /threeoldstyle /fouroldstyle /fiveoldstyle /sixoldstyle",
    "/sevenoldstyle /eightoldstyle /nineoldstyle /period /comma /less /slash",
    "/greater /star /partialdiff /A /B /C /D /E /F /G /H /I /J /K /L /M /N",
    "/O /P /Q /R /S /T /U /V /W /X /Y /Z /flat /natural /sharp /slurbelow",
    "/slurabove /lscript /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p",
    "/q /r /s /t /u /v /w /x /y /z /dotlessi /dotlessj /weierstrass /vector",
    "/tie /psi /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/space /Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi",
    "/.notdef /.notdef /Omega /alpha /beta /gamma /delta /epsilon1 /zeta /eta",
    "/theta /iota /kappa /lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon",
    "/phi /chi /psi /tie /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef",
    "] def",
    "%!",
    "TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2",
    "index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll",
    "exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0",
    "ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{",
    "pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get",
    "div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type",
    "/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end",
    "definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup",
    "sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll",
    "mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[",
    "exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}",
    "forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def",
    "end",
    "% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.",
    "11 dict begin",
    "/FontInfo 7 dict dup begin",
    "/version (1.100) readonly def",
    "/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def",
    "/FullName (CMMI12) readonly def",
    "/FamilyName (Computer Modern) readonly def",
    "/Weight (Medium) readonly def",
    "/ItalicAngle -14.04 def",
    "/isFixedPitch false def",
    "end readonly def",
    "/FontName /CMMI12 def",
    "/PaintType 0 def",
    "/FontType 1 def",
    "/FontMatrix [0.001 0 0 0.001 0 0] readonly def",
    "/Encoding 256 array",
    "0 1 255 {1 index exch /.notdef put} for",
    "dup 0 /.notdef put",
    "readonly def",
    "/FontBBox{-30 -250 1026 750}readonly def",
    "/UniqueID 5087386 def",
    "currentdict end",
    "currentfile eexec",
    "D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE",
    "3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B",
    "532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470",
    "B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B",
    "986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE",
    "D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5",
    "5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC",
    "4391C9DF440285B8FC159D0E98D4258FC57892DCC57F7903449E07914FBE9E67",
    "3C15C2153C061EB541F66C11E7EE77D5D77C0B11E1AC55101DA976CCACAB6993",
    "EED1406FBB7FF30EAC9E90B90B2AF4EC7C273CA32F11A5C1426FF641B4A2FB2F",
    "4E68635C93DB835737567FAF8471CBC05078DCD4E40E25A2F4E5AF46C234CF59",
    "2A1CE8F39E1BA1B2A594355637E474167EAD4D97D51AF0A899B44387E1FD933A",
    "323AFDA6BA740534A510B4705C0A15647AFBF3E53A82BF320DD96753639BE49C",
    "2F79A1988863EF977B800C9DB5B42039C23EB86953713F730E03EA22FF7BB2C1",
    "D97D33FD77B1BDCC2A60B12CF7805CFC90C5B914C0F30A673DF9587F93E47CEA",
    "5932DD1930560C4F0D97547BCD805D6D854455B13A4D7382A22F562D7C55041F",
    "0FD294BDAA1834820F894265A667E5C97D95FF152531EF97258F56374502865D",
    "A1E7C0C5FB7C6FB7D3C43FEB3431095A59FBF6F61CEC6D6DEE09F4EB0FD70D77",
    "2A8B0A4984C6120293F6B947944BE23259F6EB64303D627353163B6505FC8A60",
    "00681F7A3968B6CBB49E0420A691258F5E7B07B417157803FCBE9B9FB1F80FD8",
    "CA0DA1186446DD565542BCCC7D339A1EB34C7F49246E8D72E987EB477C6DB757",
    "99AF86CEBCD7605C487A00CD2CD093098182DC57B20D78ECE0BECF3A0BF88EBA",
    "C866DB19F34BBBED6634AFC0F08D2AFB2A92578A6F8B4ADCD6594737FF6EED7D",
    "5B536DA9E3E2CADB40DB7C600EA4D100D33C3B92B1CF857E012C4EB370BA8295",
    "55B50047CC8911C98FE1A7BA6CDEA82D34476286E71073F3CC1F935E5E2A1323",
    "D0818350EC94F0F1A79B9C9F5540BE3F9127989288EAF5264829D70D7286585C",
    "FA838A50B6C81FB93F85CD8E43AEB35E1D5ADECABD4CAA225C39B1872B3CDF45",
    "571DD34718ADF2045C10A957C357914BCE5FDF66AC293D7BB0EB983ABF1DE1E7",
    "5D728EDC1B0D5256C28E5D6A81677129ED0DC4B9AE4083FB0166CE595569147A",
    "62CF810ABB89AC4DFDC7554D5E548B92C6F6D583B6D0304F026FD880B458A81A",
    "5383C493F414ABCA00BE18CA2B7E4DC28C67313D531DA78D9BB337A3819A8670",
    "BAF20EDA746B7D685F32AF3B695C9822DA89497C7E9C63EF26E49524B8655173",
    "285E99C074008F5DF19E48F6CF5AE0DCCFE7671AD3BCC16D25F32E7082A72589",
    "5C7A78816B6EE71DBD312F74FA1608681655791BCEE4FF59E78D",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "cleartomark",
    "TeXDict begin 39158280 55380996 1000 600 600 (/tmp/TgifOopGZc.dvi)",
    "@start /Fa 139[ 61 116[{  TeXaae443f0Encoding ReEncodeFont } 1",
    "172.188 /CMMI12 rf end",
    "TeXDict begin",
    " end",
    "TeXDict begin 1 0 bop Fa 1920 714 a(t) p dyy eop end",
    "userdict /end-hook known{end-hook}if",
    "cleartomark countdictstack exch sub { end } repeat restore"],
    "08081810fe1020202040444830",[
])
],
"eq4-2x",1121,0,0,0,0,[
attr("", "not_rigid", 0, 1, 1,
text('blue',496,144,1,0,1,81,16,1130,13,3,0,0,0,0,2,81,16,0,0,"",0,0,0,0,157,'',[
minilines(81,16,0,0,0,0,0,[
mini_line(81,13,3,0,0,0,[
str_block(0,81,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,81,13,3,0,-1,0,0,0,0,0,
	"not_rigid")])
])
])])),
attr("eq=", "", 0, 1, 1,
text('blue',496,40,5,0,1,54,80,1129,13,3,0,0,0,0,2,54,80,0,0,"",0,0,0,0,53,'',[
minilines(54,80,0,0,0,0,0,[
mini_line(27,13,3,0,0,0,[
str_block(0,27,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,27,13,3,0,-1,0,0,0,0,0,
	"eq=")])
]),
mini_line(54,13,3,0,0,0,[
str_block(0,54,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,54,13,3,0,-1,0,0,0,0,0,
	"\\LARGE")])
]),
mini_line(18,13,3,0,0,0,[
str_block(0,18,13,3,0,-3,0,0,0,[
str_seg('#0000ff','Courier',0,80640,18,13,3,0,-3,0,0,0,0,0,
	"\\[")])
]),
mini_line(27,13,3,0,0,0,[
str_block(0,27,13,3,0,-2,0,0,0,[
str_seg('#0000ff','Courier',0,80640,27,13,3,0,-2,0,0,0,0,0,
	"  t")])
]),
mini_line(18,13,3,0,0,0,[
str_block(0,18,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,18,13,3,0,-4,0,0,0,0,0,
	"\\]")])
])
])])),
attr("file_name=", "/tmp/TgifOopGZc", 0, 1, 1,
text('blue',496,24,1,0,1,225,16,1128,13,3,0,0,0,0,2,225,16,0,0,"",0,0,0,0,37,'',[
minilines(225,16,0,0,0,0,0,[
mini_line(225,13,3,0,0,0,[
str_block(0,225,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,225,13,3,0,-1,0,0,0,0,0,
	"file_name=/tmp/TgifOopGZc")])
])
])])),
attr("cleanup=", "", 0, 1, 1,
text('blue',496,-80,3,0,1,540,48,1127,13,3,0,0,0,0,2,540,48,0,0,"",0,0,0,0,-67,'',[
minilines(540,48,0,0,0,0,0,[
mini_line(72,13,3,0,0,0,[
str_block(0,72,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,72,13,3,0,-1,0,0,0,0,0,
	"cleanup=")])
]),
mini_line(540,13,3,0,0,0,[
str_block(0,540,13,3,0,-2,0,0,0,[
str_seg('#0000ff','Courier',0,80640,540,13,3,0,-2,0,0,0,0,0,
	"    rm -f $(file_name).tex $(file_name).aux $(file_name).dvi")])
]),
mini_line(513,13,3,0,0,0,[
str_block(0,513,13,3,0,-2,0,0,0,[
str_seg('#0000ff','Courier',0,80640,513,13,3,0,-2,0,0,0,0,0,
	"        $(file_name).log $(file_name).ps $(file_name).eps")])
])
])])),
attr("cmd=", "", 0, 1, 1,
text('blue',496,-160,5,0,1,702,80,1126,13,3,0,0,0,0,2,702,80,0,0,"",0,0,0,0,-147,'',[
minilines(702,80,0,0,0,0,0,[
mini_line(36,13,3,0,0,0,[
str_block(0,36,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,36,13,3,0,-1,0,0,0,0,0,
	"cmd=")])
]),
mini_line(108,13,3,0,0,0,[
str_block(0,108,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,108,13,3,0,-4,0,0,0,0,0,
	"    cd /tmp;")])
]),
mini_line(459,13,3,0,0,0,[
str_block(0,459,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,459,13,3,0,-4,0,0,0,0,0,
	"    xterm -geom 40x8+200+400 -e latex $(file_name);")])
]),
mini_line(702,13,3,0,0,0,[
str_block(0,702,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,702,13,3,0,-4,0,0,0,0,0,
	"    xterm -geom 40x8+200+400 -e dvips -N -n 1 -o $(file_name).ps $(file_name);")])
]),
mini_line(513,13,3,0,0,0,[
str_block(0,513,13,3,0,-8,0,0,0,[
str_seg('#0000ff','Courier',0,80640,513,13,3,0,-8,0,0,0,0,0,
	"    xterm -geom 40x8+200+400 -e pstoepsi $(file_name).ps ")])
])
])])),
attr("exec=", "", 0, 1, 1,
text('blue',496,-280,8,0,1,477,128,1125,13,3,0,0,0,0,2,477,128,0,0,"",0,0,0,0,-267,'',[
minilines(477,128,0,0,0,0,0,[
mini_line(45,13,3,0,0,0,[
str_block(0,45,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,45,13,3,0,-1,0,0,0,0,0,
	"exec=")])
]),
mini_line(378,13,3,0,0,0,[
str_block(0,378,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,378,13,3,0,-4,0,0,0,0,0,
	"    mktemp(\"/tmp/TgifXXXXXX\",\"file_name\");")])
]),
mini_line(468,13,3,0,0,0,[
str_block(0,468,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,468,13,3,0,-4,0,0,0,0,0,
	"    write_attr_into_file(header,\"$(file_name).tex\");")])
]),
mini_line(441,13,3,0,0,0,[
str_block(0,441,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,441,13,3,0,-4,0,0,0,0,0,
	"    append_attr_into_file(eq,\"$(file_name).tex\");")])
]),
mini_line(477,13,3,0,0,0,[
str_block(0,477,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,477,13,3,0,-4,0,0,0,0,0,
	"    append_attr_into_file(footer,\"$(file_name).tex\");")])
]),
mini_line(162,13,3,0,0,0,[
str_block(0,162,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,162,13,3,0,-4,0,0,0,0,0,
	"    launch(\"cmd\");")])
]),
mini_line(369,13,3,0,0,0,[
str_block(0,369,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,369,13,3,0,-4,0,0,0,0,0,
	"    update_eps_child(\"$(file_name).eps\");")])
]),
mini_line(189,13,3,0,0,0,[
str_block(0,189,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,189,13,3,0,-4,0,0,0,0,0,
	"    launch(\"cleanup\")")])
])
])])),
attr("header=", "", 0, 1, 1,
text('#ff00ff',672,-29,11,0,1,270,176,1124,13,3,0,0,0,0,2,270,176,0,0,"",0,0,0,0,-16,'',[
minilines(270,176,0,0,0,0,0,[
mini_line(63,13,3,0,0,0,[
str_block(0,63,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,63,13,3,0,-1,0,0,0,0,0,
	"header=")])
]),
mini_line(261,13,3,0,0,0,[
str_block(0,261,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,261,13,3,0,-4,0,0,0,0,0,
	"\\documentstyle[12pt]{article}")])
]),
mini_line(162,13,3,0,0,0,[
str_block(0,162,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,162,13,3,0,-1,0,0,0,0,0,
	"\\oddsidemargin=0in")])
]),
mini_line(144,13,3,0,0,0,[
str_block(0,144,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,144,13,3,0,-1,0,0,0,0,0,
	"\\textwidth=6.5in")])
]),
mini_line(126,13,3,0,0,0,[
str_block(0,126,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,126,13,3,0,-1,0,0,0,0,0,
	"\\topmargin=0in")])
]),
mini_line(153,13,3,0,0,0,[
str_block(0,153,13,3,0,-2,0,0,0,[
str_seg('#0000ff','Courier',0,80640,153,13,3,0,-2,0,0,0,0,0,
	"\\textheight=609pt")])
]),
mini_line(117,13,3,0,0,0,[
str_block(0,117,13,3,0,-2,0,0,0,[
str_seg('#0000ff','Courier',0,80640,117,13,3,0,-2,0,0,0,0,0,
	"\\parskip=14pt")])
]),
mini_line(270,13,3,0,0,0,[
str_block(0,270,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,270,13,3,0,-4,0,0,0,0,0,
	"\\setlength{\\unitlength}{0.5cm}")])
]),
mini_line(153,13,3,0,0,0,[
str_block(0,153,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,153,13,3,0,-4,0,0,0,0,0,
	"\\pagestyle{empty}")])
]),
mini_line(144,13,3,0,0,0,[
str_block(0,144,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,144,13,3,0,-4,0,0,0,0,0,
	"\\begin{document}")])
]),
mini_line(9,13,3,0,0,0,[
str_block(0,9,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,9,13,3,0,-1,0,0,0,0,0,
	"%")])
])
])])),
attr("footer=", "", 0, 1, 1,
text('#ff00ff',496,-29,3,0,1,126,48,1123,13,3,0,0,0,0,2,126,48,0,0,"",0,0,0,0,-16,'',[
minilines(126,48,0,0,0,0,0,[
mini_line(63,13,3,0,0,0,[
str_block(0,63,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,63,13,3,0,-1,0,0,0,0,0,
	"footer=")])
]),
mini_line(9,13,3,0,0,0,[
str_block(0,9,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,9,13,3,0,-1,0,0,0,0,0,
	"%")])
]),
mini_line(126,13,3,0,0,0,[
str_block(0,126,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,126,13,3,0,-4,0,0,0,0,0,
	"\\end{document}")])
])
])]))
]).
icon([
polygon('#0000ff','',5,[
	496,188,500,188,500,184,496,184,496,188],0,1,0,0,1186,0,0,0,0,0,'1',0,
    "00",[
]),
xbm('black','',496,184,503,197,0,1185,0,7,13,0,0,1,302000,684000,309000,697000,0,0,1,0,0,0,0,
    "Sat Jul 23 00:53:34 2005","/tmp/TgifOopGZc.eps",187,[
    "%!PS-Adobe-2.0 EPSF-1.2",
    "",
    "save countdictstack mark newpath /showpage {} def /setpagedevice {pop} def",
    "%!PS (but not EPSF; comments have been disabled)",
    "%DVIPSWebPage: (www.radicaleye.com)",
    "%DVIPSCommandLine: dvips -N -n 1 -o /tmp/TgifOopGZc.ps /tmp/TgifOopGZc",
    "%DVIPSParameters: dpi=600, compressed",
    "%DVIPSSource:  TeX output 2005.07.23:0053",
    "%!",
    "/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S",
    "N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72",
    "mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0",
    "0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{",
    "landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize",
    "mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[",
    "matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round",
    "exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{",
    "statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]",
    "N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin",
    "/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array",
    "/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2",
    "array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N",
    "df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A",
    "definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get",
    "}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}",
    "B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr",
    "1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3",
    "1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx",
    "0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx",
    "sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{",
    "rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp",
    "gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B",
    "/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{",
    "/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{",
    "A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy",
    "get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}",
    "ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp",
    "fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17",
    "{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add",
    "chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{",
    "1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}",
    "forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn",
    "/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put",
    "}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{",
    "bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A",
    "mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{",
    "SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{",
    "userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X",
    "1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4",
    "index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N",
    "/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3",
    "def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90",
    "rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0",
    "N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop",
    "false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A",
    "length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}",
    "forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{",
    "BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat",
    "{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch",
    "round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0",
    "rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B",
    "/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}",
    "B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p",
    "-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{",
    "0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end",
    "% Thomas Esser, Dec 2002. public domain",
    "%",
    "% Encoding for:",
    "%     cmmi10 cmmi12 cmmi5 cmmi6 cmmi7 cmmi8 cmmi9 cmmib10",
    "%",
    "/TeXaae443f0Encoding [",
    "/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega",
    "/alpha /beta /gamma /delta /epsilon1 /zeta /eta /theta /iota /kappa",
    "/lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon /phi /chi /psi",
    "/omega /epsilon /theta1 /pi1 /rho1 /sigma1 /phi1 /arrowlefttophalf",
    "/arrowleftbothalf /arrowrighttophalf /arrowrightbothalf /arrowhookleft",
    "/arrowhookright /triangleright /triangleleft /zerooldstyle /oneoldstyle",
    "/twooldstyle /threeoldstyle /fouroldstyle /fiveoldstyle /sixoldstyle",
    "/sevenoldstyle /eightoldstyle /nineoldstyle /period /comma /less /slash",
    "/greater /star /partialdiff /A /B /C /D /E /F /G /H /I /J /K /L /M /N",
    "/O /P /Q /R /S /T /U /V /W /X /Y /Z /flat /natural /sharp /slurbelow",
    "/slurabove /lscript /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p",
    "/q /r /s /t /u /v /w /x /y /z /dotlessi /dotlessj /weierstrass /vector",
    "/tie /psi /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/space /Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi",
    "/.notdef /.notdef /Omega /alpha /beta /gamma /delta /epsilon1 /zeta /eta",
    "/theta /iota /kappa /lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon",
    "/phi /chi /psi /tie /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef",
    "] def",
    "%!",
    "TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2",
    "index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll",
    "exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0",
    "ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{",
    "pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get",
    "div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type",
    "/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end",
    "definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup",
    "sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll",
    "mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[",
    "exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}",
    "forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def",
    "end",
    "% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.",
    "11 dict begin",
    "/FontInfo 7 dict dup begin",
    "/version (1.100) readonly def",
    "/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def",
    "/FullName (CMMI12) readonly def",
    "/FamilyName (Computer Modern) readonly def",
    "/Weight (Medium) readonly def",
    "/ItalicAngle -14.04 def",
    "/isFixedPitch false def",
    "end readonly def",
    "/FontName /CMMI12 def",
    "/PaintType 0 def",
    "/FontType 1 def",
    "/FontMatrix [0.001 0 0 0.001 0 0] readonly def",
    "/Encoding 256 array",
    "0 1 255 {1 index exch /.notdef put} for",
    "dup 0 /.notdef put",
    "readonly def",
    "/FontBBox{-30 -250 1026 750}readonly def",
    "/UniqueID 5087386 def",
    "currentdict end",
    "currentfile eexec",
    "D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE",
    "3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B",
    "532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470",
    "B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B",
    "986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE",
    "D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5",
    "5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC",
    "4391C9DF440285B8FC159D0E98D4258FC57892DCC57F7903449E07914FBE9E67",
    "3C15C2153C061EB541F66C11E7EE77D5D77C0B11E1AC55101DA976CCACAB6993",
    "EED1406FBB7FF30EAC9E90B90B2AF4EC7C273CA32F11A5C1426FF641B4A2FB2F",
    "4E68635C93DB835737567FAF8471CBC05078DCD4E40E25A2F4E5AF46C234CF59",
    "2A1CE8F39E1BA1B2A594355637E474167EAD4D97D51AF0A899B44387E1FD933A",
    "323AFDA6BA740534A510B4705C0A15647AFBF3E53A82BF320DD96753639BE49C",
    "2F79A1988863EF977B800C9DB5B42039C23EB86953713F730E03EA22FF7BB2C1",
    "D97D33FD77B1BDCC2A60B12CF7805CFC90C5B914C0F30A673DF9587F93E47CEA",
    "5932DD1930560C4F0D97547BCD805D6D854455B13A4D7382A22F562D7C55041F",
    "0FD294BDAA1834820F894265A667E5C97D95FF152531EF97258F56374502865D",
    "A1E7C0C5FB7C6FB7D3C43FEB3431095A59FBF6F61CEC6D6DEE09F4EB0FD70D77",
    "2A8B0A4984C6120293F6B947944BE23259F6EB64303D627353163B6505FC8A60",
    "00681F7A3968B6CBB49E0420A691258F5E7B07B417157803FCBE9B9FB1F80FD8",
    "CA0DA1186446DD565542BCCC7D339A1EB34C7F49246E8D72E987EB477C6DB757",
    "99AF86CEBCD7605C487A00CD2CD093098182DC57B20D78ECE0BECF3A0BF88EBA",
    "C866DB19F34BBBED6634AFC0F08D2AFB2A92578A6F8B4ADCD6594737FF6EED7D",
    "5B536DA9E3E2CADB40DB7C600EA4D100D33C3B92B1CF857E012C4EB370BA8295",
    "55B50047CC8911C98FE1A7BA6CDEA82D34476286E71073F3CC1F935E5E2A1323",
    "D0818350EC94F0F1A79B9C9F5540BE3F9127989288EAF5264829D70D7286585C",
    "FA838A50B6C81FB93F85CD8E43AEB35E1D5ADECABD4CAA225C39B1872B3CDF45",
    "571DD34718ADF2045C10A957C357914BCE5FDF66AC293D7BB0EB983ABF1DE1E7",
    "5D728EDC1B0D5256C28E5D6A81677129ED0DC4B9AE4083FB0166CE595569147A",
    "62CF810ABB89AC4DFDC7554D5E548B92C6F6D583B6D0304F026FD880B458A81A",
    "5383C493F414ABCA00BE18CA2B7E4DC28C67313D531DA78D9BB337A3819A8670",
    "BAF20EDA746B7D685F32AF3B695C9822DA89497C7E9C63EF26E49524B8655173",
    "285E99C074008F5DF19E48F6CF5AE0DCCFE7671AD3BCC16D25F32E7082A72589",
    "5C7A78816B6EE71DBD312F74FA1608681655791BCEE4FF59E78D",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "cleartomark",
    "TeXDict begin 39158280 55380996 1000 600 600 (/tmp/TgifOopGZc.dvi)",
    "@start /Fa 139[ 61 116[{  TeXaae443f0Encoding ReEncodeFont } 1",
    "172.188 /CMMI12 rf end",
    "TeXDict begin",
    " end",
    "TeXDict begin 1 0 bop Fa 1920 714 a(t) p dyy eop end",
    "userdict /end-hook known{end-hook}if",
    "cleartomark countdictstack exch sub { end } repeat restore"],
    "08081810fe1020202040444830",[
])
],
"eq4-2x",1184,0,0,0,0,[
attr("", "not_rigid", 0, 1, 1,
text('blue',496,208,1,0,1,81,16,1194,13,3,0,0,0,0,2,81,16,0,0,"",0,0,0,0,221,'',[
minilines(81,16,0,0,0,0,0,[
mini_line(81,13,3,0,0,0,[
str_block(0,81,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,81,13,3,0,-1,0,0,0,0,0,
	"not_rigid")])
])
])])),
attr("eq=", "", 0, 1, 1,
text('blue',496,104,5,0,1,54,80,1193,13,3,0,0,0,0,2,54,80,0,0,"",0,0,0,0,117,'',[
minilines(54,80,0,0,0,0,0,[
mini_line(27,13,3,0,0,0,[
str_block(0,27,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,27,13,3,0,-1,0,0,0,0,0,
	"eq=")])
]),
mini_line(54,13,3,0,0,0,[
str_block(0,54,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,54,13,3,0,-1,0,0,0,0,0,
	"\\LARGE")])
]),
mini_line(18,13,3,0,0,0,[
str_block(0,18,13,3,0,-3,0,0,0,[
str_seg('#0000ff','Courier',0,80640,18,13,3,0,-3,0,0,0,0,0,
	"\\[")])
]),
mini_line(27,13,3,0,0,0,[
str_block(0,27,13,3,0,-2,0,0,0,[
str_seg('#0000ff','Courier',0,80640,27,13,3,0,-2,0,0,0,0,0,
	"  t")])
]),
mini_line(18,13,3,0,0,0,[
str_block(0,18,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,18,13,3,0,-4,0,0,0,0,0,
	"\\]")])
])
])])),
attr("file_name=", "/tmp/TgifOopGZc", 0, 1, 1,
text('blue',496,88,1,0,1,225,16,1192,13,3,0,0,0,0,2,225,16,0,0,"",0,0,0,0,101,'',[
minilines(225,16,0,0,0,0,0,[
mini_line(225,13,3,0,0,0,[
str_block(0,225,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,225,13,3,0,-1,0,0,0,0,0,
	"file_name=/tmp/TgifOopGZc")])
])
])])),
attr("cleanup=", "", 0, 1, 1,
text('blue',496,-16,3,0,1,540,48,1191,13,3,0,0,0,0,2,540,48,0,0,"",0,0,0,0,-3,'',[
minilines(540,48,0,0,0,0,0,[
mini_line(72,13,3,0,0,0,[
str_block(0,72,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,72,13,3,0,-1,0,0,0,0,0,
	"cleanup=")])
]),
mini_line(540,13,3,0,0,0,[
str_block(0,540,13,3,0,-2,0,0,0,[
str_seg('#0000ff','Courier',0,80640,540,13,3,0,-2,0,0,0,0,0,
	"    rm -f $(file_name).tex $(file_name).aux $(file_name).dvi")])
]),
mini_line(513,13,3,0,0,0,[
str_block(0,513,13,3,0,-2,0,0,0,[
str_seg('#0000ff','Courier',0,80640,513,13,3,0,-2,0,0,0,0,0,
	"        $(file_name).log $(file_name).ps $(file_name).eps")])
])
])])),
attr("cmd=", "", 0, 1, 1,
text('blue',496,-96,5,0,1,702,80,1190,13,3,0,0,0,0,2,702,80,0,0,"",0,0,0,0,-83,'',[
minilines(702,80,0,0,0,0,0,[
mini_line(36,13,3,0,0,0,[
str_block(0,36,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,36,13,3,0,-1,0,0,0,0,0,
	"cmd=")])
]),
mini_line(108,13,3,0,0,0,[
str_block(0,108,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,108,13,3,0,-4,0,0,0,0,0,
	"    cd /tmp;")])
]),
mini_line(459,13,3,0,0,0,[
str_block(0,459,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,459,13,3,0,-4,0,0,0,0,0,
	"    xterm -geom 40x8+200+400 -e latex $(file_name);")])
]),
mini_line(702,13,3,0,0,0,[
str_block(0,702,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,702,13,3,0,-4,0,0,0,0,0,
	"    xterm -geom 40x8+200+400 -e dvips -N -n 1 -o $(file_name).ps $(file_name);")])
]),
mini_line(513,13,3,0,0,0,[
str_block(0,513,13,3,0,-8,0,0,0,[
str_seg('#0000ff','Courier',0,80640,513,13,3,0,-8,0,0,0,0,0,
	"    xterm -geom 40x8+200+400 -e pstoepsi $(file_name).ps ")])
])
])])),
attr("exec=", "", 0, 1, 1,
text('blue',496,-216,8,0,1,477,128,1189,13,3,0,0,0,0,2,477,128,0,0,"",0,0,0,0,-203,'',[
minilines(477,128,0,0,0,0,0,[
mini_line(45,13,3,0,0,0,[
str_block(0,45,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,45,13,3,0,-1,0,0,0,0,0,
	"exec=")])
]),
mini_line(378,13,3,0,0,0,[
str_block(0,378,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,378,13,3,0,-4,0,0,0,0,0,
	"    mktemp(\"/tmp/TgifXXXXXX\",\"file_name\");")])
]),
mini_line(468,13,3,0,0,0,[
str_block(0,468,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,468,13,3,0,-4,0,0,0,0,0,
	"    write_attr_into_file(header,\"$(file_name).tex\");")])
]),
mini_line(441,13,3,0,0,0,[
str_block(0,441,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,441,13,3,0,-4,0,0,0,0,0,
	"    append_attr_into_file(eq,\"$(file_name).tex\");")])
]),
mini_line(477,13,3,0,0,0,[
str_block(0,477,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,477,13,3,0,-4,0,0,0,0,0,
	"    append_attr_into_file(footer,\"$(file_name).tex\");")])
]),
mini_line(162,13,3,0,0,0,[
str_block(0,162,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,162,13,3,0,-4,0,0,0,0,0,
	"    launch(\"cmd\");")])
]),
mini_line(369,13,3,0,0,0,[
str_block(0,369,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,369,13,3,0,-4,0,0,0,0,0,
	"    update_eps_child(\"$(file_name).eps\");")])
]),
mini_line(189,13,3,0,0,0,[
str_block(0,189,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,189,13,3,0,-4,0,0,0,0,0,
	"    launch(\"cleanup\")")])
])
])])),
attr("header=", "", 0, 1, 1,
text('#ff00ff',672,35,11,0,1,270,176,1188,13,3,0,0,0,0,2,270,176,0,0,"",0,0,0,0,48,'',[
minilines(270,176,0,0,0,0,0,[
mini_line(63,13,3,0,0,0,[
str_block(0,63,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,63,13,3,0,-1,0,0,0,0,0,
	"header=")])
]),
mini_line(261,13,3,0,0,0,[
str_block(0,261,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,261,13,3,0,-4,0,0,0,0,0,
	"\\documentstyle[12pt]{article}")])
]),
mini_line(162,13,3,0,0,0,[
str_block(0,162,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,162,13,3,0,-1,0,0,0,0,0,
	"\\oddsidemargin=0in")])
]),
mini_line(144,13,3,0,0,0,[
str_block(0,144,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,144,13,3,0,-1,0,0,0,0,0,
	"\\textwidth=6.5in")])
]),
mini_line(126,13,3,0,0,0,[
str_block(0,126,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,126,13,3,0,-1,0,0,0,0,0,
	"\\topmargin=0in")])
]),
mini_line(153,13,3,0,0,0,[
str_block(0,153,13,3,0,-2,0,0,0,[
str_seg('#0000ff','Courier',0,80640,153,13,3,0,-2,0,0,0,0,0,
	"\\textheight=609pt")])
]),
mini_line(117,13,3,0,0,0,[
str_block(0,117,13,3,0,-2,0,0,0,[
str_seg('#0000ff','Courier',0,80640,117,13,3,0,-2,0,0,0,0,0,
	"\\parskip=14pt")])
]),
mini_line(270,13,3,0,0,0,[
str_block(0,270,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,270,13,3,0,-4,0,0,0,0,0,
	"\\setlength{\\unitlength}{0.5cm}")])
]),
mini_line(153,13,3,0,0,0,[
str_block(0,153,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,153,13,3,0,-4,0,0,0,0,0,
	"\\pagestyle{empty}")])
]),
mini_line(144,13,3,0,0,0,[
str_block(0,144,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,144,13,3,0,-4,0,0,0,0,0,
	"\\begin{document}")])
]),
mini_line(9,13,3,0,0,0,[
str_block(0,9,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,9,13,3,0,-1,0,0,0,0,0,
	"%")])
])
])])),
attr("footer=", "", 0, 1, 1,
text('#ff00ff',496,35,3,0,1,126,48,1187,13,3,0,0,0,0,2,126,48,0,0,"",0,0,0,0,48,'',[
minilines(126,48,0,0,0,0,0,[
mini_line(63,13,3,0,0,0,[
str_block(0,63,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,63,13,3,0,-1,0,0,0,0,0,
	"footer=")])
]),
mini_line(9,13,3,0,0,0,[
str_block(0,9,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,9,13,3,0,-1,0,0,0,0,0,
	"%")])
]),
mini_line(126,13,3,0,0,0,[
str_block(0,126,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,126,13,3,0,-4,0,0,0,0,0,
	"\\end{document}")])
])
])]))
]).
text('black',72,118,1,0,1,30,22,1195,18,4,0,0,0,0,2,30,22,0,0,"",0,0,0,0,136,'',[
minilines(30,22,0,0,0,0,0,[
mini_line(30,18,4,0,0,0,[
str_block(0,30,18,4,0,-1,0,0,0,[
str_seg('black','Helvetica',0,103680,30,18,4,0,-1,0,0,0,0,0,
	"MC")])
])
])]).
text('black',56,182,1,0,1,53,22,1198,18,4,0,0,0,0,2,53,22,0,0,"",0,0,0,0,200,'',[
minilines(53,22,0,0,0,0,0,[
mini_line(53,18,4,0,0,0,[
str_block(0,53,18,4,0,-1,0,0,0,[
str_seg('black','Helvetica',0,103680,53,18,4,0,-1,0,0,0,0,0,
	"RFMC")])
])
])]).
icon([
polygon('#0000ff','',5,[
	296,220,300,220,300,216,296,216,296,220],0,1,0,0,1213,0,0,0,0,0,'1',0,
    "00",[
]),
xbm('black','',296,216,338,235,0,1266,0,42,19,0,0,1,285000,678000,327000,697000,0,0,1,0,0,0,0,
    "Sat Jul 23 00:54:43 2005","/tmp/Tgif2ddiZz.eps",308,[
    "%!PS-Adobe-2.0 EPSF-1.2",
    "",
    "save countdictstack mark newpath /showpage {} def /setpagedevice {pop} def",
    "%!PS (but not EPSF; comments have been disabled)",
    "%DVIPSWebPage: (www.radicaleye.com)",
    "%DVIPSCommandLine: dvips -N -n 1 -o /tmp/Tgif2ddiZz.ps /tmp/Tgif2ddiZz",
    "%DVIPSParameters: dpi=600, compressed",
    "%DVIPSSource:  TeX output 2005.07.23:0054",
    "%!",
    "/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S",
    "N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72",
    "mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0",
    "0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{",
    "landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize",
    "mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[",
    "matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round",
    "exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{",
    "statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]",
    "N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin",
    "/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array",
    "/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2",
    "array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N",
    "df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A",
    "definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get",
    "}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}",
    "B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr",
    "1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3",
    "1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx",
    "0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx",
    "sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{",
    "rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp",
    "gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B",
    "/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{",
    "/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{",
    "A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy",
    "get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}",
    "ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp",
    "fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17",
    "{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add",
    "chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{",
    "1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}",
    "forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn",
    "/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put",
    "}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{",
    "bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A",
    "mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{",
    "SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{",
    "userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X",
    "1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4",
    "index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N",
    "/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3",
    "def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90",
    "rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0",
    "N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop",
    "false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A",
    "length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}",
    "forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{",
    "BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat",
    "{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch",
    "round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0",
    "rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B",
    "/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}",
    "B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p",
    "-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{",
    "0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end",
    "% Thomas Esser, Dec 2002. public domain",
    "%",
    "% Encoding for:",
    "%     cmmi10 cmmi12 cmmi5 cmmi6 cmmi7 cmmi8 cmmi9 cmmib10",
    "%",
    "/TeXaae443f0Encoding [",
    "/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega",
    "/alpha /beta /gamma /delta /epsilon1 /zeta /eta /theta /iota /kappa",
    "/lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon /phi /chi /psi",
    "/omega /epsilon /theta1 /pi1 /rho1 /sigma1 /phi1 /arrowlefttophalf",
    "/arrowleftbothalf /arrowrighttophalf /arrowrightbothalf /arrowhookleft",
    "/arrowhookright /triangleright /triangleleft /zerooldstyle /oneoldstyle",
    "/twooldstyle /threeoldstyle /fouroldstyle /fiveoldstyle /sixoldstyle",
    "/sevenoldstyle /eightoldstyle /nineoldstyle /period /comma /less /slash",
    "/greater /star /partialdiff /A /B /C /D /E /F /G /H /I /J /K /L /M /N",
    "/O /P /Q /R /S /T /U /V /W /X /Y /Z /flat /natural /sharp /slurbelow",
    "/slurabove /lscript /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p",
    "/q /r /s /t /u /v /w /x /y /z /dotlessi /dotlessj /weierstrass /vector",
    "/tie /psi /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/space /Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi",
    "/.notdef /.notdef /Omega /alpha /beta /gamma /delta /epsilon1 /zeta /eta",
    "/theta /iota /kappa /lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon",
    "/phi /chi /psi /tie /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef",
    "] def",
    "% Thomas Esser, Dec 2002. public domain",
    "%",
    "% Encoding for:",
    "%     cmb10 cmbx10 cmbx12 cmbx5 cmbx6 cmbx7 cmbx8 cmbx9 cmbxsl10",
    "%     cmdunh10 cmr10 cmr12 cmr17cmr6 cmr7 cmr8 cmr9 cmsl10 cmsl12 cmsl8",
    "%     cmsl9 cmss10cmss12 cmss17 cmss8 cmss9 cmssbx10 cmssdc10 cmssi10",
    "%     cmssi12 cmssi17 cmssi8cmssi9 cmssq8 cmssqi8 cmvtt10",
    "%",
    "/TeXf7b6d320Encoding [",
    "/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega",
    "/ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute /caron /breve",
    "/macron /ring /cedilla /germandbls /ae /oe /oslash /AE /OE /Oslash",
    "/suppress /exclam /quotedblright /numbersign /dollar /percent /ampersand",
    "/quoteright /parenleft /parenright /asterisk /plus /comma /hyphen",
    "/period /slash /zero /one /two /three /four /five /six /seven /eight",
    "/nine /colon /semicolon /exclamdown /equal /questiondown /question /at",
    "/A /B /C /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X",
    "/Y /Z /bracketleft /quotedblleft /bracketright /circumflex /dotaccent",
    "/quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u",
    "/v /w /x /y /z /endash /emdash /hungarumlaut /tilde /dieresis /suppress",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /space",
    "/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /.notdef",
    "/.notdef /Omega /ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute",
    "/caron /breve /macron /ring /cedilla /germandbls /ae /oe /oslash /AE",
    "/OE /Oslash /suppress /dieresis /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef",
    "] def",
    "%!",
    "TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2",
    "index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll",
    "exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0",
    "ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{",
    "pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get",
    "div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type",
    "/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end",
    "definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup",
    "sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll",
    "mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[",
    "exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}",
    "forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def",
    "end",
    "% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.",
    "11 dict begin",
    "/FontInfo 7 dict dup begin",
    "/version (1.0) readonly def",
    "/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def",
    "/FullName (CMR17) readonly def",
    "/FamilyName (Computer Modern) readonly def",
    "/Weight (Medium) readonly def",
    "/ItalicAngle 0 def",
    "/isFixedPitch false def",
    "end readonly def",
    "/FontName /CMR17 def",
    "/PaintType 0 def",
    "/FontType 1 def",
    "/FontMatrix [0.001 0 0 0.001 0 0] readonly def",
    "/Encoding 256 array",
    "0 1 255 {1 index exch /.notdef put} for",
    "dup 0 /.notdef put",
    "readonly def",
    "/FontBBox{-33 -250 945 749}readonly def",
    "/UniqueID 5000795 def",
    "currentdict end",
    "currentfile eexec",
    "D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891",
    "016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171",
    "9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F",
    "D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758",
    "469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8",
    "2BDBF16FBC7512FAA308A093FE5F075EA0A10A15B0ED05D5039DA41B32B16E95",
    "A3CE9725A429B35BAD796912FC328E3A28F96FCADA20A598E247755E7E7FF801",
    "BDB00E9B9B086BDBE6EDCF841A3EAFC6F5284FED3C634085BA4EE0FC6A026E96",
    "96D55575481B007BF93CA452EE3F71D83FAAB3D9DEDD2A8F96C5840EAE5BE5DC",
    "9322E81DFF5E250DEB386E12A49FC9FBF9B4C25C3283F3CEA74B8278A1B09DA7",
    "E9AE4FBAAF23EDF5A3E07D39385D521547C3AAAB8EB70549756EBA8EF445AF4A",
    "497CA924ACCC3DD5456F8E2C7E36946A5BF14E2E959895F7C94F49137256BE46",
    "4A238684D52792234869EAE1A6D8ADF4E138B79472D2A90A6CA99E2394CC20CD",
    "3841733046175B20CEBE372327BF13428EED6A3E2FDF84C2DBA4B0AD584EE9DF",
    "B51828D3B8F385846158C29C9AC3496CB9692DD10219697B2ED4D425C3957FD8",
    "C4600D76E045C561216EF05D38177243C314877A69A1C22E3BEC611A2EE5A216",
    "9B7C264CF6D1839DBBD78A40610F2C0D7C2FE09FFA9822FF55035AD52546970F",
    "83EED2D30EABB1F303091EBC11A5379B12BB3F405E371519A53EA9D66174ED25",
    "A2E55463EC71A97BE4C04B39E68112956117C8252DB6FB14AB64534B4BCD568B",
    "246DB833982B38CDE7268BBF74B6B0C18091E1B1F87D32D66F4DD023D1F10D2A",
    "7736A960F72AC01F733A11023832CD68FB6288A5977743F781214D8FA9C0C3F7",
    "80001321D4397771F728FD9EE57CFE7D9192B887EC883EB1505068261DC40089",
    "7B7D2820F06515CD74513521F6397FEAB3AD3572D9A8269430E407E357422461",
    "1785FC2782047F4C0339D79B16862D939F3A37F78E4E2174E4FBF132539CB760",
    "207999FF86F6A3EBE48EB0A1CA635450FDEEF79EB16D853F3BF4B0D37EBFFEE1",
    "9E7A64D3313B6B7963057DCC7141D8E8063E79C2A7E00EBD80F4D0DA9B6AB632",
    "2DC7A5BCD1696ACDFCA585C8E2B4D3D936EECE4962B65462601BF44F5D3F8476",
    "1758CB1D4FD0CD8CDA68FFA85F7C71D0C06C482AB2BC23949F080D3352C04ADE",
    "0D80380740718EDA886C6682D2E923A634C1A94226B06287234E79F1B2A074F4",
    "77D15D32EF342243C89A163E0EF9C417E1024294942E5F8D4253FBB7AA7DA88C",
    "8850AB68804F5CC3B2D205ADBE7A79384F9953D8B0B31551E192A1150FE1FEC4",
    "9D4E5E8FEEA79CD5C6F323DC3563131B7E30F011DECF07A0FFECC8C8391EF7A8",
    "A838C30D64B426C1BD8B151C8B0DDBCBBE5E471253589961795D2C6052C76821",
    "7C12B89784317FF1C519180EDBAE89E7349D51A39844615876D9E10D533FF6CD",
    "7C11F36FA282EBC80572EABD857C1DE117FD52BEB890CA64C1FC13D5577A4F43",
    "E52399B4A750C82B56C8A31379FDCCE9B6C451480ABEF035FA1D4EFDA7178BCD",
    "4C88F4539AD6EBEC8441CFE45ABA059F8B018F6A8AB99363AE1154089F02F2F2",
    "C002E83E999D7E2F27344121F218839C8E949D31458A0C9064D3737F5FBC1694",
    "F06A8CEC680D7CE5F5020ED5D92D1DAE8DF3BC78380BBC2D312B311CAB57A6CA",
    "AFFD3089409D4680A0EA312079C3E78BC82911F1C022A4A212C6060D732279C1",
    "C924DAE2AE8D7D353413DC5DF9055E6D13E9788F56134912041450DCCAFEF55E",
    "00F58F61950CA2A4BCFA2C6B9E5AF0F539B3B9F94A2C0A9FBED548443D08A646",
    "C1241DF2C083FC59DDC532436A6B968AF7BF09C63AE0B9931DC51A40C5725C18",
    "BC64067DB2B75BB7E701597D364AA5C2F2BB98F64BC92F6F0A285F9FE3FC0EB6",
    "4E34E30FB2D694544E6D0101B40BB2A9C1EC03BAFA733F4AFDEC7C47E8F2379C",
    "A1F3EF8E04B2E96B8ACD9CF75C7D192F074891D623FD16023E6E6BFBFBE7ACCE",
    "62D6F1B1915426A44D5B4F73893E5635E388C177A0AF672AB80A55C5FC72DACE",
    "08F024DAFE85072DFCC43629D0720F3BAD9AB387DA237427FC29261DD6D1BA88",
    "300F29D9D6E3155A5077DBA1922891CA3E4EBEBF2AC290F0E0C0618ADD4C4EDA",
    "CAC1359DFADF8016FFB74721",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "cleartomark",
    "% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.",
    "11 dict begin",
    "/FontInfo 7 dict dup begin",
    "/version (1.100) readonly def",
    "/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def",
    "/FullName (CMMI12) readonly def",
    "/FamilyName (Computer Modern) readonly def",
    "/Weight (Medium) readonly def",
    "/ItalicAngle -14.04 def",
    "/isFixedPitch false def",
    "end readonly def",
    "/FontName /CMMI12 def",
    "/PaintType 0 def",
    "/FontType 1 def",
    "/FontMatrix [0.001 0 0 0.001 0 0] readonly def",
    "/Encoding 256 array",
    "0 1 255 {1 index exch /.notdef put} for",
    "dup 0 /.notdef put",
    "readonly def",
    "/FontBBox{-30 -250 1026 750}readonly def",
    "/UniqueID 5087386 def",
    "currentdict end",
    "currentfile eexec",
    "D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE",
    "3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B",
    "532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470",
    "B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B",
    "986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE",
    "D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5",
    "5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC",
    "4391C9DF440285B8FC159D0E98D4258FC57892DCC57F7903449E07914FBE9E67",
    "3C15C2153C061EB541F66C11E7EE77D5D77C0B11E1AC55101DA976CCACAB6993",
    "EED1406FBB7FF30EAC9E90B90B2AF4EC7C273CA32F11A5C1426FF641B4A2FB2F",
    "4E68635C93DB835737567FAF8471CBC05078DCD4E40E25A2F4E5AF46C234CF59",
    "2A1CE8F39E1BA1B2A594355637E474167EAD4D97D51AF0A899B44387E1FD933A",
    "323AFDA6BA740534A510B4705C0A15647AFBF3E53A82BF320DD96753639BE49C",
    "2F79A1988863EF977B800C9DB5B42039C23EB86953713F730E03EA22FF7BB2C1",
    "D97D33FD77B1BDCC2A60B12CF7805CFC90C5B914C0F30A673DF9587F93E47CEA",
    "5932DD1930560C4F0D97547BCD805D6D854455B13A4D7382A22F562D7C55041F",
    "0FD294BDAA1834820F894265A667E5C97D95FF152531EF97258F56374502865D",
    "A1E7C0C5FB7C6FB7D3C43FEB3431095A59FBF6F61CEC6D6DEE09F4EB0FD70D77",
    "2A8B0A4984C6120293F6B947944BE23259F6EB64303D627353163B6505FC8A60",
    "00681F7A3968B6CBB49E0420A691258F5E7B07B417157803FCBE9B9FB1F80FD8",
    "CA0DA1186446DD565542BCCC7D339A1EB34C7F49246E8D72E987EB477C6DB757",
    "99AF86CEBCD7605C487A00CD2CD093098182DC57B20D78ECE0BECF3A0BF88EBA",
    "C866DB19F34BBBED6634AFC0F08D2AFB2A92578A6F8B4ADCD6594737FF6EED7D",
    "5B536DA9E3E2CADB40DB7C600EA4D100D33C3B92B1CF857E012C4EB370BA8295",
    "55B50047CC8911C98FE1A7BA6CDEA82D34476286E71073F3CC1F935E5E2A1323",
    "D0818350EC94F0F1A79B9C9F5540BE3F9127989288EAF5264829D70D7286585C",
    "FA838A50B6C81FB93F85CD8E43AEB35E1D5ADECABD4CAA225C39B1872B3CDF45",
    "571DD34718ADF2045C10A957C357914BCE5FDF66AC293D7BB0EB983ABF1DE1E7",
    "5D728EDC1B0D5256C28E5D6A81677129ED0DC4B9AE4083FB0166CE595569147A",
    "62CF810ABB89AC4DFDC7554D5E548B92C6F6D583B6D0304F026FD880B458A81A",
    "5383C493F414ABCA00BE18CA2B7E4DC28C67313D531DA78D9BB337A3819A8670",
    "BAF20EDA746B7D685F32AF3B695C9822DA89497C7E9C63EF26E49524B8655173",
    "285E99C074008F5DF19E48F6CF5AE0DCCFE7671AD3BCC16D25F32E7082A72589",
    "5C7A78816B6EE71DBD312F74FA1608681655791BCEE4FF59E78D",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "0000000000000000000000000000000000000000000000000000000000000000",
    "cleartomark",
    "TeXDict begin 39158280 55380996 1000 600 600 (/tmp/Tgif2ddiZz.dvi)",
    "@start /Fa 136[ 115 2[ 61 10[ 43 7[ 79 97[{",
    " TeXf7b6d320Encoding ReEncodeFont } 4 172.188 /CMR17",
    "rf /Fb 139[ 61 116[{  TeXaae443f0Encoding ReEncodeFont } 1",
    "172.188 /CMMI12 rf end",
    "TeXDict begin",
    " end",
    "TeXDict begin 1 0 bop Fb 1771 714 a(t) p Fa 1832 768",
    "a(w) l(ait) p dyy eop end",
    "userdict /end-hook known{end-hook}if",
    "cleartomark countdictstack exch sub { end } repeat restore"],
    "08000000000080000000001800000000010000000000fe000000000100000008
     002000000080020000000040200000000404000000004045ef7bc18f848c4306
     084030402220840004221e084000200320840002144208440021042484400108
     66486c001083c9e38",[
])
],
"eq4-2x",1211,0,0,0,0,[
attr("", "not_rigid", 0, 1, 1,
text('blue',296,240,1,0,1,81,16,1221,13,3,0,0,0,0,2,81,16,0,0,"",0,0,0,0,253,'',[
minilines(81,16,0,0,0,0,0,[
mini_line(81,13,3,0,0,0,[
str_block(0,81,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,81,13,3,0,-1,0,0,0,0,0,
	"not_rigid")])
])
])])),
attr("eq=", "", 0, 1, 1,
text('blue',296,136,5,0,1,153,80,1220,13,3,0,0,0,0,2,153,80,0,0,"",0,0,0,0,149,'',[
minilines(153,80,0,0,0,0,0,[
mini_line(27,13,3,0,0,0,[
str_block(0,27,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,27,13,3,0,-1,0,0,0,0,0,
	"eq=")])
]),
mini_line(54,13,3,0,0,0,[
str_block(0,54,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,54,13,3,0,-1,0,0,0,0,0,
	"\\LARGE")])
]),
mini_line(18,13,3,0,0,0,[
str_block(0,18,13,3,0,-3,0,0,0,[
str_seg('#0000ff','Courier',0,80640,18,13,3,0,-3,0,0,0,0,0,
	"\\[")])
]),
mini_line(153,13,3,0,0,0,[
str_block(0,153,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,153,13,3,0,-4,0,0,0,0,0,
	"  t_{\\mbox{wait}}")])
]),
mini_line(18,13,3,0,0,0,[
str_block(0,18,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,18,13,3,0,-4,0,0,0,0,0,
	"\\]")])
])
])])),
attr("file_name=", "/tmp/Tgif2ddiZz", 0, 1, 1,
text('blue',296,120,1,0,1,225,16,1219,13,3,0,0,0,0,2,225,16,0,0,"",0,0,0,0,133,'',[
minilines(225,16,0,0,0,0,0,[
mini_line(225,13,3,0,0,0,[
str_block(0,225,13,3,0,-3,0,0,0,[
str_seg('#0000ff','Courier',0,80640,225,13,3,0,-3,0,0,0,0,0,
	"file_name=/tmp/Tgif2ddiZz")])
])
])])),
attr("cleanup=", "", 0, 1, 1,
text('blue',296,16,3,0,1,540,48,1218,13,3,0,0,0,0,2,540,48,0,0,"",0,0,0,0,29,'',[
minilines(540,48,0,0,0,0,0,[
mini_line(72,13,3,0,0,0,[
str_block(0,72,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,72,13,3,0,-1,0,0,0,0,0,
	"cleanup=")])
]),
mini_line(540,13,3,0,0,0,[
str_block(0,540,13,3,0,-2,0,0,0,[
str_seg('#0000ff','Courier',0,80640,540,13,3,0,-2,0,0,0,0,0,
	"    rm -f $(file_name).tex $(file_name).aux $(file_name).dvi")])
]),
mini_line(513,13,3,0,0,0,[
str_block(0,513,13,3,0,-2,0,0,0,[
str_seg('#0000ff','Courier',0,80640,513,13,3,0,-2,0,0,0,0,0,
	"        $(file_name).log $(file_name).ps $(file_name).eps")])
])
])])),
attr("cmd=", "", 0, 1, 1,
text('blue',296,-64,5,0,1,702,80,1217,13,3,0,0,0,0,2,702,80,0,0,"",0,0,0,0,-51,'',[
minilines(702,80,0,0,0,0,0,[
mini_line(36,13,3,0,0,0,[
str_block(0,36,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,36,13,3,0,-1,0,0,0,0,0,
	"cmd=")])
]),
mini_line(108,13,3,0,0,0,[
str_block(0,108,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,108,13,3,0,-4,0,0,0,0,0,
	"    cd /tmp;")])
]),
mini_line(459,13,3,0,0,0,[
str_block(0,459,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,459,13,3,0,-4,0,0,0,0,0,
	"    xterm -geom 40x8+200+400 -e latex $(file_name);")])
]),
mini_line(702,13,3,0,0,0,[
str_block(0,702,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,702,13,3,0,-4,0,0,0,0,0,
	"    xterm -geom 40x8+200+400 -e dvips -N -n 1 -o $(file_name).ps $(file_name);")])
]),
mini_line(513,13,3,0,0,0,[
str_block(0,513,13,3,0,-8,0,0,0,[
str_seg('#0000ff','Courier',0,80640,513,13,3,0,-8,0,0,0,0,0,
	"    xterm -geom 40x8+200+400 -e pstoepsi $(file_name).ps ")])
])
])])),
attr("exec=", "", 0, 1, 1,
text('blue',296,-184,8,0,1,477,128,1216,13,3,0,0,0,0,2,477,128,0,0,"",0,0,0,0,-171,'',[
minilines(477,128,0,0,0,0,0,[
mini_line(45,13,3,0,0,0,[
str_block(0,45,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,45,13,3,0,-1,0,0,0,0,0,
	"exec=")])
]),
mini_line(378,13,3,0,0,0,[
str_block(0,378,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,378,13,3,0,-4,0,0,0,0,0,
	"    mktemp(\"/tmp/TgifXXXXXX\",\"file_name\");")])
]),
mini_line(468,13,3,0,0,0,[
str_block(0,468,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,468,13,3,0,-4,0,0,0,0,0,
	"    write_attr_into_file(header,\"$(file_name).tex\");")])
]),
mini_line(441,13,3,0,0,0,[
str_block(0,441,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,441,13,3,0,-4,0,0,0,0,0,
	"    append_attr_into_file(eq,\"$(file_name).tex\");")])
]),
mini_line(477,13,3,0,0,0,[
str_block(0,477,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,477,13,3,0,-4,0,0,0,0,0,
	"    append_attr_into_file(footer,\"$(file_name).tex\");")])
]),
mini_line(162,13,3,0,0,0,[
str_block(0,162,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,162,13,3,0,-4,0,0,0,0,0,
	"    launch(\"cmd\");")])
]),
mini_line(369,13,3,0,0,0,[
str_block(0,369,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,369,13,3,0,-4,0,0,0,0,0,
	"    update_eps_child(\"$(file_name).eps\");")])
]),
mini_line(189,13,3,0,0,0,[
str_block(0,189,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,189,13,3,0,-4,0,0,0,0,0,
	"    launch(\"cleanup\")")])
])
])])),
attr("header=", "", 0, 1, 1,
text('#ff00ff',472,67,11,0,1,270,176,1215,13,3,0,0,0,0,2,270,176,0,0,"",0,0,0,0,80,'',[
minilines(270,176,0,0,0,0,0,[
mini_line(63,13,3,0,0,0,[
str_block(0,63,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,63,13,3,0,-1,0,0,0,0,0,
	"header=")])
]),
mini_line(261,13,3,0,0,0,[
str_block(0,261,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,261,13,3,0,-4,0,0,0,0,0,
	"\\documentstyle[12pt]{article}")])
]),
mini_line(162,13,3,0,0,0,[
str_block(0,162,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,162,13,3,0,-1,0,0,0,0,0,
	"\\oddsidemargin=0in")])
]),
mini_line(144,13,3,0,0,0,[
str_block(0,144,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,144,13,3,0,-1,0,0,0,0,0,
	"\\textwidth=6.5in")])
]),
mini_line(126,13,3,0,0,0,[
str_block(0,126,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,126,13,3,0,-1,0,0,0,0,0,
	"\\topmargin=0in")])
]),
mini_line(153,13,3,0,0,0,[
str_block(0,153,13,3,0,-2,0,0,0,[
str_seg('#0000ff','Courier',0,80640,153,13,3,0,-2,0,0,0,0,0,
	"\\textheight=609pt")])
]),
mini_line(117,13,3,0,0,0,[
str_block(0,117,13,3,0,-2,0,0,0,[
str_seg('#0000ff','Courier',0,80640,117,13,3,0,-2,0,0,0,0,0,
	"\\parskip=14pt")])
]),
mini_line(270,13,3,0,0,0,[
str_block(0,270,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,270,13,3,0,-4,0,0,0,0,0,
	"\\setlength{\\unitlength}{0.5cm}")])
]),
mini_line(153,13,3,0,0,0,[
str_block(0,153,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,153,13,3,0,-4,0,0,0,0,0,
	"\\pagestyle{empty}")])
]),
mini_line(144,13,3,0,0,0,[
str_block(0,144,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,144,13,3,0,-4,0,0,0,0,0,
	"\\begin{document}")])
]),
mini_line(9,13,3,0,0,0,[
str_block(0,9,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,9,13,3,0,-1,0,0,0,0,0,
	"%")])
])
])])),
attr("footer=", "", 0, 1, 1,
text('#ff00ff',296,67,3,0,1,126,48,1214,13,3,0,0,0,0,2,126,48,0,0,"",0,0,0,0,80,'',[
minilines(126,48,0,0,0,0,0,[
mini_line(63,13,3,0,0,0,[
str_block(0,63,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,63,13,3,0,-1,0,0,0,0,0,
	"footer=")])
]),
mini_line(9,13,3,0,0,0,[
str_block(0,9,13,3,0,-1,0,0,0,[
str_seg('#0000ff','Courier',0,80640,9,13,3,0,-1,0,0,0,0,0,
	"%")])
]),
mini_line(126,13,3,0,0,0,[
str_block(0,126,13,3,0,-4,0,0,0,[
str_seg('#0000ff','Courier',0,80640,126,13,3,0,-4,0,0,0,0,0,
	"\\end{document}")])
])
])]))
]).
poly('black','',3,[
	224,192,232,212,264,224],0,1,1,1278,1,0,0,0,0,0,0,'1',0,0,
    "4","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',3,[
	416,192,408,212,376,224],0,1,1,1292,1,0,0,0,0,0,0,'1',0,0,
    "4","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
